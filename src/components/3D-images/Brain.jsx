// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// Command: npx gltfjsx@6.2.16 brain.gltf --transform 
// Files: brain.gltf [1.77MB] > /Users/vincentcheong/Downloads/brain/brain-transformed.glb [764.05KB] (57%)
// Author: oxterium (https://sketchfab.com/oxterium)
// License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
// Source: https://sketchfab.com/3d-models/brain-hologram-09d686a1a1f745cba6b2385d0c831214
// Title: Brain hologram
// */


import React, { useRef, useEffect } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import { MeshStandardMaterial } from 'three';

export default function Model(props) {
  const group = useRef();
  const { nodes, animations } = useGLTF('/brain-transformed.glb');
  const { actions } = useAnimations(animations, group);

  const particleMaterial1 = new MeshStandardMaterial({ color: 0x31a6f9 }); // Blue
  const particleMaterial2 = new MeshStandardMaterial({ color: 0xff761b  }); // Yellow

  useEffect(() => {
    if (actions) {
      const actionNames = Object.keys(actions);
      if (actionNames.length > 0) {
        actions[actionNames[0]].play();
      }
    }
  }, [actions]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="RootNode" scale={0.022}>
          <group name="Icosphere001" rotation={[-Math.PI / 2, 0, -2.734]} scale={100}>
            <mesh
              name="Icosphere001_Particle_2_0"
              geometry={nodes.Icosphere001_Particle_2_0.geometry}
              material={particleMaterial2} // Use particleMaterial2
            />
            <mesh
              name="Icosphere001_Particle_1_0"
              geometry={nodes.Icosphere001_Particle_1_0.geometry}
              material={particleMaterial1} // Use particleMaterial1
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/brain-transformed.glb');